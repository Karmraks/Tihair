// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tihair.Core.Data;

#nullable disable

namespace Tihair.Core.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240106144829_AddedRoles")]
    partial class AddedRoles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tihair.Core.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4b5bad0-a45f-46ba-8739-3ca8c2718a9a"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("44de9aae-9776-440e-b41b-95a709849093"),
                            Name = "Sensei"
                        },
                        new
                        {
                            Id = new Guid("7e626fc1-8635-4be2-b6e3-8b2a6b2e3c4e"),
                            Name = "Trainee"
                        });
                });

            modelBuilder.Entity("Tihair.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01f0b2ad-3a7b-46bc-8ed4-d6544aadbc8d"),
                            Name = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("Tihair.Core.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b390b174-2805-4f66-9339-f2a203a1be34"),
                            RoleId = new Guid("b4b5bad0-a45f-46ba-8739-3ca8c2718a9a"),
                            UserId = new Guid("01f0b2ad-3a7b-46bc-8ed4-d6544aadbc8d")
                        });
                });

            modelBuilder.Entity("Tihair.Core.Models.UserRole", b =>
                {
                    b.HasOne("Tihair.Core.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tihair.Core.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tihair.Core.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
